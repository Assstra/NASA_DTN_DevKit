node n1 {
    type router
    model mdr
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 10.0.0.1/32
	 ipv6 address 2001:0::1/128
	!
    }
    canvas c1
    iconcoords {215.0 165.0}
    labelcoords {215.0 197.0}
    interface-peer {eth0 n10}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/ion', )
	files=('setup.sh', )
	cmdup=('sh ./setup.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:setup.sh
	custom-command setup.sh
	config {
	foo=`dirname $SESSION_FILENAME`
	sh $foo/generalSetup.sh
	}
    }
    services {zebra OSPFv3MDR vtysh IPForward UserDefined}
}

node n2 {
    type router
    model mdr
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.0.2/32
	 ipv6 address 2001:0::2/128
	!
    }
    canvas c1
    iconcoords {407.0 164.0}
    labelcoords {407.0 196.0}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/ion', )
	files=('setup.sh', )
	cmdup=('sh ./setup.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:setup.sh
	custom-command setup.sh
	config {
	foo=`dirname $SESSION_FILENAME`
	sh $foo/generalSetup.sh
	}
    }
    services {zebra OSPFv3MDR vtysh IPForward UserDefined}
    interface-peer {eth0 n10}
}

node n3 {
    type router
    model mdr
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.0.3/32
	 ipv6 address 2001:0::3/128
	!
    }
    canvas c1
    iconcoords {601.0 164.0}
    labelcoords {601.0 196.0}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/ion', )
	files=('setup.sh', )
	cmdup=('sh ./setup.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:setup.sh
	custom-command setup.sh
	config {
	foo=`dirname $SESSION_FILENAME`
	sh $foo/generalSetup.sh
	}
    }
    services {zebra OSPFv3MDR vtysh IPForward UserDefined}
    interface-peer {eth0 n10}
}

node n4 {
    type router
    model mdr
    network-config {
	hostname n4
	!
	interface eth0
	 ip address 10.0.0.4/32
	 ipv6 address 2001:0::4/128
	!
    }
    canvas c1
    iconcoords {214.0 357.0}
    labelcoords {214.0 389.0}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/ion', )
	files=('setup.sh', )
	cmdup=('sh ./setup.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:setup.sh
	custom-command setup.sh
	config {
	foo=`dirname $SESSION_FILENAME`
	sh $foo/generalSetup.sh
	}
    }
    services {zebra OSPFv3MDR vtysh IPForward UserDefined}
    interface-peer {eth0 n10}
}

node n5 {
    type router
    model mdr
    network-config {
	hostname n5
	!
	interface eth0
	 ip address 10.0.0.5/32
	 ipv6 address 2001:0::5/128
	!
    }
    canvas c1
    iconcoords {407.0 358.0}
    labelcoords {407.0 390.0}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/ion', )
	files=('setup.sh', )
	cmdup=('sh ./setup.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:setup.sh
	custom-command setup.sh
	config {
	foo=`dirname $SESSION_FILENAME`
	sh $foo/generalSetup.sh
	}
    }
    services {zebra OSPFv3MDR vtysh IPForward UserDefined}
    interface-peer {eth0 n10}
}

node n6 {
    type router
    model mdr
    network-config {
	hostname n6
	!
	interface eth0
	 ip address 10.0.0.6/32
	 ipv6 address 2001:0::6/128
	!
    }
    canvas c1
    iconcoords {601.0 359.0}
    labelcoords {601.0 391.0}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/ion', )
	files=('setup.sh', )
	cmdup=('sh ./setup.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:setup.sh
	custom-command setup.sh
	config {
	foo=`dirname $SESSION_FILENAME`
	sh $foo/generalSetup.sh
	}
    }
    services {zebra OSPFv3MDR vtysh IPForward UserDefined}
    interface-peer {eth0 n10}
}

node n7 {
    type router
    model mdr
    network-config {
	hostname n7
	!
	interface eth0
	 ip address 10.0.0.7/32
	 ipv6 address 2001:0::7/128
	!
    }
    canvas c1
    iconcoords {215.0 553.0}
    labelcoords {215.0 585.0}
    interface-peer {eth0 n10}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/ion', )
	files=('setup.sh', )
	cmdup=('sh ./setup.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:setup.sh
	custom-command setup.sh
	config {
	foo=`dirname $SESSION_FILENAME`
	sh $foo/generalSetup.sh
	}
    }
    services {zebra OSPFv3MDR vtysh IPForward UserDefined}
}

node n8 {
    type router
    model mdr
    network-config {
	hostname n8
	!
	interface eth0
	 ip address 10.0.0.8/32
	 ipv6 address 2001:0::8/128
	!
    }
    canvas c1
    iconcoords {407.0 552.0}
    labelcoords {407.0 584.0}
    interface-peer {eth0 n10}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/ion', )
	files=('setup.sh', )
	cmdup=('sh ./setup.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:setup.sh
	custom-command setup.sh
	config {
	foo=`dirname $SESSION_FILENAME`
	sh $foo/generalSetup.sh
	}
    }
    services {zebra OSPFv3MDR vtysh IPForward UserDefined}
}

node n9 {
    type router
    model mdr
    network-config {
	hostname n9
	!
	interface eth0
	 ip address 10.0.0.9/32
	 ipv6 address 2001:0::9/128
	!
    }
    canvas c1
    iconcoords {601.0 553.0}
    labelcoords {601.0 585.0}
    interface-peer {eth0 n10}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('setup.sh', )
	cmdup=('sh ./setup.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:setup.sh
	custom-command setup.sh
	config {
	foo=`dirname $SESSION_FILENAME`
	sh $foo/generalSetup.sh
	}
    }
    services {zebra OSPFv3MDR vtysh IPForward UserDefined}
}

node n10 {
    type wlan
    network-config {
	hostname wlan10
	!
	interface wireless
	 ip address 10.0.0.0/32
	 ipv6 address 2001:0::0/128
	!
	mobmodel
	coreapi
	basic_range
	!
    }
    custom-config {
	custom-config-id basic_range
	custom-command {3 3 9 9 9}
	config {
	range=200
	bandwidth=54000000
	jitter=0
	delay=20000
	error=0
	}
    }
    canvas c1
    iconcoords {743.0 72.0}
    labelcoords {743.0 104.0}
    interface-peer {e0 n1}
    interface-peer {e1 n2}
    interface-peer {e2 n3}
    interface-peer {e3 n4}
    interface-peer {e4 n5}
    interface-peer {e5 n6}
    interface-peer {e6 n7}
    interface-peer {e7 n8}
    interface-peer {e8 n9}
}

link l1 {
    nodes {n10 n1}
}

link l2 {
    nodes {n10 n2}
}

link l3 {
    nodes {n10 n3}
}

link l4 {
    nodes {n10 n4}
}

link l5 {
    nodes {n10 n5}
}

link l6 {
    nodes {n10 n6}
}

link l7 {
    nodes {n10 n7}
}

link l8 {
    nodes {n10 n8}
}

link l9 {
    nodes {n10 n9}
}

annotation a1 {
    iconcoords {46.0 82.0}
    type text
    label {Test pngs are located on N1}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a2 {
    iconcoords {98.0 60.0}
    type text
    label {CGR Testing}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

hook 3:instantiation_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state

rm -f /tmp/ionrcdate



}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
    controlnet=192.168.0.2/24
    controlnet_updown_script=
    enablerj45=1
    enablesdt=0
    preservedir=0
    sdturl=tcp://127.0.0.1:50000/
}

