node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth1
	 ip address 10.0.2.1/24
	 ipv6 address 2001:2::1/64
	!
	interface eth0
	 ip address 10.0.0.1/24
	 ipv6 address 2001:0::1/64
	!
    }
    canvas c1
    iconcoords {311.0 80.0}
    labelcoords {311.0 112.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/ion', )
	files=('setup.sh', )
	cmdup=('sh ./setup.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:setup.sh
	custom-command setup.sh
	config {
	foo=`dirname $SESSION_FILENAME`
	sh $foo/generalSetup.sh
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward SSH UserDefined}
    interface-peer {eth1 n3}
}

node n2 {
    type router
    model router
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.0.2/24
	 ipv6 address 2001:0::2/64
	!
    }
    canvas c1
    iconcoords {72.0 202.0}
    labelcoords {72.0 234.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/ion', )
	files=('setup.sh', )
	cmdup=('sh ./setup.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:setup.sh
	custom-command setup.sh
	config {
	foo=`dirname $SESSION_FILENAME`
	sh $foo/generalSetup.sh
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward SSH UserDefined}
}

node n3 {
    type router
    model mdr
    network-config {
	hostname n3
	!
	interface eth1
	 ip address 10.0.2.2/24
	 ipv6 address 2001:2::2/64
	!
    }
    canvas c1
    iconcoords {546.0 199.0}
    labelcoords {546.0 231.0}
    interface-peer {eth1 n1}
    services {zebra OSPFv2 OSPFv3 vtysh IPForward SSH UserDefined}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/ion', )
	files=('setup.sh', )
	cmdup=('sh ./setup.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:setup.sh
	custom-command setup.sh
	config {
	foo=`dirname $SESSION_FILENAME`
	sh $foo/generalSetup.sh
	}
    }
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l3 {
    nodes {n1 n3}
    bandwidth 0
}

annotation a4 {
    type text
    iconcoords {315.0 87.0}
    label {}
    canvas c1
}

annotation a1 {
    iconcoords {132 119 255 159}
    type oval
    label {UDPCL}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    color #CFCFFF
    width 0
    border black
    canvas c1
}

annotation a2 {
    iconcoords {372 113 497 155}
    type oval
    label {TCPCL}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    color #CFCFFF
    width 0
    border black
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

hook 3:instantiation_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state
rm -f /tmp/ionrcdate












}

hook 4:runtime_hook.sh {
#!/bin/bash
# session hook script; write commands here to execute on the host at the
# specified state

pycore=`ls /tmp | grep pycore`
#sleep 15 && xterm -e "/usr/local/sbin/vcmd -c /tmp/$pycore/n2 -- bping ipn:2.5 ipn:4.1" &
exit 0


}

hook 6:shutdown_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state

killall -9 vcmd










}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
    controlnet=192.168.0.0/24
    controlnet_updown_script=
    enablerj45=1
    enablesdt=0
    preservedir=0
    sdturl=tcp://127.0.0.1:50000/
}

