#LTP Pattern Config File Generator
#Generates a repeating pattern that can be appended onto a base .ionrc file
#Usage:
#ltpat.sh this_node_number target_node_number distance bytes_per_second
#   total_loop_time start_time end_time number_of_loops filename
#EX: ltpat.sh 4 3 1 10000 60 0 30 5 node4.base.ionrc
# link from 3->4 and 4->3 that turns on and off with 30 second periods
# this loop will repeat 5 times. This script will output node4.ionrc

#if there is already an ionrc config file when this script is run,
#   it will be moved to ./old<filename>

#error handle the number of arguments?

basetime=`date -u +"%Y/%m/%d-%H:"`
mintime=`date +'%M'`

printf -v curtime "%s%02d:00" $basetime $mintime

thisnode=$1
thatnode=$2
distance=$3
bps=$4
looptime=$5
start=$6
end=$7
numloops=$8
premades=$9
outfile='node'$thisnode'.ionrc'

#back up the old ionrc if it exists
if [ -f ./$outfile ]
then
	mv ./$outfile ./old$outfile
fi
#echo a header for the auto generated ranges
echo "### Generated by LTPAT.SH" > $outfile
#echo the initialization command
echo "1 $thisnode" >> $outfile
echo "s" >> $outfile
#echo the correct time to set the reference
echo @ $curtime >> $outfile
echo "m horizon +0" >> $outfile
echo "" >> $outfile
echo "# RANGES AND CONTACTS:" >> $outfile
echo "" >> $outfile
#write in all of the premade routes and contacts
cat $premades >> $outfile

#actually generate times
echo "#Generated loop ranges and contacts:" >> $outfile
echo "" >> $outfile

for (( i=0; i<$numloops; i+=1 ))
do
	((newstart=($start + ($looptime * $i))))
	((newend=($end + ($looptime * $i))))
	echo "a range   +$newstart +$newend $thisnode $thatnode $distance" >> $outfile
	echo "a range   +$newstart +$newend $thatnode $thisnode $distance" >> $outfile
	echo "a contact +$newstart +$newend $thisnode $thatnode $bps" >> $outfile
	echo "a contact +$newstart +$newend $thatnode $thisnode $bps" >> $outfile
	echo "" >> $outfile
done




